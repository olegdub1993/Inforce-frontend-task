{"version":3,"sources":["components/ProductList/MyModal/MyModal.module.css","components/ProductList/Product/Product.module.css","redux/product-reducer.js","redux/productList-reducer.js","redux/redux-store.js","components/ProductList/Product/Product.jsx","components/ProductList/MyModal/MyModal.jsx","components/ProductList/ProductList.jsx","components/ProductList/ProductPage.jsx","App.jsx","index.js"],"names":["module","exports","initialstate","product","setProductInfo","type","profileReducer","state","action","products","modalAdd","modalRemove","productListReducer","modal","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","productsListPage","productItemPage","productReducer","store","createStore","applyMiddleware","thunk","Product","data","toggleModalAdd","toggleModalRemove","className","styles","to","title","body","button","onClick","e","productInfoLink","MyModal","children","toggleModal","myModal__content","connect","requestProducts","dispatch","a","fetch","json","useEffect","placeholder","map","p","key","id","productItem","requestProduct","App","path","render","AppRoot","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.03573cea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"MyModal_modal__G3nD2\",\"myModal__content\":\"MyModal_myModal__content__201kq\",\"button\":\"MyModal_button__34ml-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"product\":\"Product_product__3pq92\",\"button\":\"Product_button__1QFCP\",\"productInfoLink\":\"Product_productInfoLink__NAL2o\"};","const SET_PRODUCT_INFO = \"SET_PRODUCT_INFO\";\r\nconst initialstate = {\r\n  product: {},\r\n};\r\nlet profileReducer = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case SET_PRODUCT_INFO:\r\n      debugger;\r\n      return { ...state, product: action.product };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport let requestProduct = () => async (dispatch) => {\r\n  let data = await (\r\n    await fetch(`https://jsonplaceholder.typicode.com/posts/1`)\r\n  ).json();\r\n\r\n  dispatch(setProductInfo(data));\r\n};\r\n\r\nexport let setProductInfo = (product) => ({ type: SET_PRODUCT_INFO, product });\r\nexport default profileReducer;\r\n","const SET_PRODUCTS_LIST = \" users/SET-PRODUCT-LIST\";\r\nconst TOGGLE_MODAL_ADD = \"users/TOGGLE_ADD\";\r\nconst TOGGLE_MODAL_REMOVE = \"users/TOGGLE_REMOVE\";\r\nconst initialstate = {\r\n  products: [{}],\r\n  modalAdd: false,\r\n  modalRemove: false,\r\n};\r\nlet productListReducer = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case SET_PRODUCTS_LIST:\r\n      return { ...state, products: [...action.products] };\r\n    case TOGGLE_MODAL_ADD: {\r\n      return { ...state, modalAdd: action.modal };\r\n    }\r\n    case TOGGLE_MODAL_REMOVE: {\r\n      return { ...state, modalRemove: action.modal };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport let setProductsList = (products) => ({\r\n  type: SET_PRODUCTS_LIST,\r\n  products,\r\n});\r\n\r\nexport let toggleModalAdd = (modal) => ({\r\n  type: TOGGLE_MODAL_ADD,\r\n  modal,\r\n});\r\nexport let toggleModalRemove = (modal) => ({\r\n  type: TOGGLE_MODAL_REMOVE,\r\n  modal,\r\n});\r\n\r\nexport let requestProducts = () => async (dispatch) => {\r\n  let data = await (\r\n    await fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n  ).json();\r\n  dispatch(setProductsList(data));\r\n};\r\n\r\nexport default productListReducer;\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport productReducer from \"./product-reducer\";\r\nimport productListReducer from \"./productList-reducer\";\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nlet reducers = combineReducers({\r\n  productsListPage: productListReducer,\r\n  productItemPage: productReducer,\r\n});\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\nexport default store;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./Product.module.css\";\r\nconst Product = ({ data, toggleModalAdd, toggleModalRemove }) => {\r\n  const addHandler = (e) => {\r\n    toggleModalAdd(true);\r\n  };\r\n  const removeHandler = (event) => {\r\n    toggleModalRemove(true);\r\n  };\r\n  return (\r\n    <div className={styles.product} to=\"/product\">\r\n      <h2> {data.title}</h2>\r\n      <div>{data.body}</div>\r\n      <button className={styles.button} onClick={(e) => addHandler(e)}>\r\n        Add\r\n      </button>\r\n      <button onClick={(e) => removeHandler(e)}>Remove</button>\r\n      <NavLink className={styles.productInfoLink} to=\"/product\">\r\n        See more\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\nexport default Product;\r\n","import React from \"react\";\r\nimport styles from \"./MyModal.module.css\";\r\nconst MyModal = ({ children, toggleModal }) => {\r\n  return (\r\n    <div className={styles.modal}>\r\n      <div className={styles.myModal__content}>\r\n        <form action=\"\">{children}</form>\r\n\r\n        <button\r\n          className={styles.button}\r\n          onClick={() => {\r\n            toggleModal(false);\r\n          }}\r\n        >\r\n          Confirm\r\n        </button>\r\n        <button\r\n          className={styles.button}\r\n          onClick={() => {\r\n            toggleModal(false);\r\n          }}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MyModal;\r\n","import { connect } from \"react-redux\";\r\nimport React, { useEffect } from \"react\";\r\nimport Product from \"./Product/Product\";\r\nimport {\r\n  requestProducts,\r\n  toggleModalAdd,\r\n  toggleModalRemove,\r\n} from \"../../redux/productList-reducer\";\r\nimport Modal from \"./MyModal/MyModal\";\r\nconst ProductList = ({\r\n  products,\r\n  requestProducts,\r\n  modalAdd,\r\n  modalRemove,\r\n  toggleModalAdd,\r\n  toggleModalRemove,\r\n}) => {\r\n  useEffect(() => {\r\n    requestProducts();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {modalAdd && (\r\n        <Modal toggleModal={toggleModalAdd}>\r\n          <div>\r\n            <input type=\"text\" placeholder=\"size\" />\r\n          </div>\r\n          <div>\r\n            <input type=\"text\" placeholder=\"color\" />\r\n          </div>\r\n          <div>\r\n            <input type=\"text\" placeholder=\"weight\" />\r\n          </div>\r\n        </Modal>\r\n      )}\r\n      {modalRemove && (\r\n        <Modal toggleModal={toggleModalRemove}>Are you shure?</Modal>\r\n      )}\r\n      <h1>ProductList</h1>\r\n      {products.map((p) => (\r\n        <Product\r\n          data={p}\r\n          key={p.id}\r\n          toggleModalAdd={toggleModalAdd}\r\n          toggleModalRemove={toggleModalRemove}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    products: state.productsListPage.products,\r\n    modalAdd: state.productsListPage.modalAdd,\r\n    modalRemove: state.productsListPage.modalRemove,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  requestProducts,\r\n  toggleModalAdd,\r\n  toggleModalRemove,\r\n})(ProductList);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { requestProduct } from \"../../redux/product-reducer\";\r\n\r\nconst ProductPage = ({ productItem, requestProduct }) => {\r\n  useEffect(() => {\r\n    requestProduct();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <h2> {productItem.title}</h2>\r\n      <div>{productItem.body}</div>\r\n    </div>\r\n  );\r\n};\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    productItem: state.productItemPage.product,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  requestProduct,\r\n})(ProductPage);\r\n","import { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport \"./App.css\";\r\nimport store from \"./redux/redux-store\";\r\nimport { Provider } from \"react-redux\";\r\nimport ProductList from \"./components/ProductList/ProductList\";\r\nimport ProductPage from \"./components/ProductList/ProductPage\";\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app-wrapper\">\r\n      <Switch>\r\n        <Route path={\"/productList\"} render={() => <ProductList />} />\r\n        <Route path={\"/product\"} render={() => <ProductPage />} />\r\n        <Redirect to={\"/productList\"} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\nexport const AppRoot = () => (\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>\r\n);\r\n","import React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport MyApp, { AppContainer, AppRoot } from \"./App\";\nimport store from \"./redux/redux-store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <AppRoot />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n// let store = {\n//   _subscriber() {\n//     console.log(\"no subscribers (observers)\");\n//   },\n//   _state: {\n//     firstName: \"oleg\",\n//     secondName: \"dub\",\n//   },\n//   getState() {\n//     return this.state;\n//   },\n//   subscribe(observer) {\n//     this._subscriber = observer;\n//   },\n//   setFirstName(value) {\n//     this._state.firstName = value;\n//     this._subscriber();\n//   };\n"],"sourceRoot":""}